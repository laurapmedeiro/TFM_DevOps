name: Java Spring Boot CI/CD

on: 
  push:
    branches:
      - develop
      
jobs:
  build:
    if: github.event.pull_request.merged == true || github.event_name == 'push'
    runs-on: ubuntu-latest
    env: 
      backend-directory: ./backend

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Create JAR
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Clean and compile without tests
        run: mvn clean compile package -Dmaven.test.skip=true
        working-directory: ${{env.backend-directory}}

      - name: Create folder staging if not exists
        run: mkdir -p staging
        
      - name: Move JAR and JSON to staging folder
        run: cp target/classes/*.json ../staging && cp target/*.jar ../staging
        working-directory: ${{env.backend-directory}}
     
      - name: Upload JAR artifact
        uses: actions/upload-artifact@v2
        with:
            name: java-jar-artifact
            path: staging
        

  create-docker-images:
    env: 
      tag-docker-front: frontend-1.0.0
      tag-docker-back: backend-1.0.0
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Download JAR artifact
        uses: actions/download-artifact@v2
        with:
          name: java-jar-artifact
          path: staging

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build backend docker image
        run: docker build . --file Dockerfile-backend --tag laurapmedeiro/pwa-tfm:${{env.tag-docker-back}}

      - name: Push image
        run: docker push laurapmedeiro/pwa-tfm:${{env.tag-docker-back}}

      - name: Build frontend docker image
        run: docker build . --file Dockerfile-frontend --tag laurapmedeiro/pwa-tfm:${{env.tag-docker-front}}

      - name: Push image
        run: docker push laurapmedeiro/pwa-tfm:${{env.tag-docker-front}}

  deploy-K8s:
    if: true
    env:
      GKE_CLUSTER_NAME: deployment-cluster    # cluster name
      GKE_ZONE: europe-southwest1   # cluster zone
      
    needs: create-docker-images
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # Setup in gcloud CLI
      - name: Auth to Google
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GKE_SA_KEY }}'

      # Get the GKE credentialsr
      - name: Set up GKE credentials
        uses: google-github-actions/get-gke-credentials@v0
        with:
          cluster_name: ${{ env.GKE_CLUSTER_NAME}}
          location: ${{ env.GKE_ZONE }}

      # Deploy the YAML file to the GKE cluster
      - name: Deploy
        run: |-
          kubectl apply -f ${{ secrets.VERSION_DEPLOY }}-deployment.yaml
          kubectl get all
    
